# 配置一些必需项，其他的从注册中心获取
spring:
  application:
    name: service-product
  cloud:
    nacos:
      config:
        # 注意当使用域名的方式来访问 Nacos 时，spring.cloud.nacos.config.server-addr 配置的方式为 域名:port。
        # 例如 Nacos 的域名为 abc.com.nacos，监听的端口为 80，则 spring.cloud.nacos.config.server-addr=abc.com.nacos:80。 注意 80 端口不能省略。
        server-addr: 127.0.0.1:8848 # nacos 的服务端地址
        prefix: ${spring.application.name} # DataId前缀，默认值：${spring.application.name}
        group: DEFAULT_GROUP # 默认值：DEFAULT_GROUP
        file-extension: yaml # dataID后缀及内容文件格式，默认值是 properties
        encode: UTF-8 # 配置内容的编码方式。默认值：UTF-8
        timeout: 3000 # 获取配置的超时时间，单位：ms。默认值：3000
        namespace: public # 配置的命名空间。常用场景之一是不同环境的配置的区分隔离，例如开发测试环境和生产环境的资源隔离等。
        refresh-enabled: false # 是否开启监听和自动刷新。默认值：true
        # 方式1：通过 shared-dataids 属性引入公共配置，已过时？！
        # shared-dataids: all-service.yaml # 配置要引入的配置
        # refreshable-dataids: all-service.yaml # 配置要实现动态配置刷新的配置
        # 方式2：通过 ext-config 属性引入公共配置，也已过时？！
        ext-config:
          - data-id: all-service.yaml
            group: DEFAULT_GROUP
            refresh: true
  profiles:
    active: dev # 环境标识